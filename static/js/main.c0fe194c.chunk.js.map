{"version":3,"sources":["components/ScrollToTop.js","redux/moviesListAC.js","redux/favoriteListAC.js","redux/fetchThunk.js","AppData.js","components/Movie.js","components/Header.js","components/Pagination.js","App.js","pages/Page_MoviesList.js","components/Cast.js","components/Chart.js","components/Favorite.js","components/Recomended.js","components/MovieInfo.js","pages/Page_MovieInfo.js","components/FavoriteList.js","pages/Page_FavoriteList.js","pages/Page_MovieList_pages.js","redux/moviesListReducer.js","redux/favoriteListReducer.js","redux/reducers.js","pages/PagesRouter..js","reportWebVitals.js","index.js"],"names":["ScrollToTop","prevProps","this","props","location","pathname","window","scrollTo","React","Component","withRouter","MOVIES_LOADING","MOVIES_ERROR","MOVIES_SET","FAVORITES_LOADING","FAVORITES_ERROR","FAVORITES_SET","FAVORITES_DELETE","favoriteDeleteAC","deleteIndex","type","moviesThunkAC","dispatch","apiArray","i","push","fetch","then","res","ok","json","Error","status","results","Promise","all","length","concat","data","movies","console","log","catch","error","favoritesThunkAC","id","favorites","Movie","setVoteClass","vote","className","src","poster_path","alt","title","vote_average","overview","to","PureComponent","Header","connect","state","Pagination","pages","creator","pagesCount","Math","ceil","currPage","setState","map","page","index","App","update","perPage","moviesList","slice","movie","Page_MoviesList","Cast","credits","dataReady","fetchSuccess","movieCredits","fetchError","errorMessage","loadData","movieId","cast","massage","actor","profile_path","original_name","character","cast_id","DoughnutChart","require","Doughnut","MyChart","color","chartData","value","options","showTooltips","segmentShowStroke","segmentStrokeColor","segmentStrokeWidth","percentageInnerCutout","animationSteps","animationEasing","animateRotate","animateScale","legendTemplate","width","height","Favorite","added","addToFavoriteList","findIndex","delete","onClick","Recomended","recMovies","recMovie","exact","backdrop_path","floor","IMG_API","MovieInfo","info","movieInfo","rating","style","background","release_date","original_title","fontStyle","margin","runtime","genres","name","join","fontFamily","fontSize","opacity","tagline","Page_MovieInfo","parseInt","match","params","mid","FavoriteList","list","item","Page_FavoriteList","Page_MoviesList_pages","initState","moviesListReducer","action","newState","favoriteListReducer","splice","combinedReducer","combineReducers","persistedState","localStorage","getItem","JSON","parse","store","createStore","applyMiddleware","thunk","subscribe","setItem","stringify","getState","PagesRouter","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0fe194c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass ScrollToTop extends React.Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      this.props.location.pathname !== prevProps.location.pathname\r\n    ) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);","const MOVIES_LOADING='MOVIES_LOADING';\r\nconst MOVIES_ERROR='MOVIES_ERROR';\r\nconst MOVIES_SET='MOVIES_SET';\r\n\r\nconst moviesLoadingAC=function() {\r\n  return {\r\n    type: MOVIES_LOADING,\r\n  };\r\n}\r\n\r\nconst moviesErrorAC=function() {\r\n  return {\r\n    type: MOVIES_ERROR,\r\n  };\r\n}\r\n\r\nconst moviesSetAC=function(movies) {\r\n  return {\r\n    type: MOVIES_SET,\r\n    movies:movies,\r\n  };\r\n}\r\n\r\nexport {\r\n  moviesLoadingAC,MOVIES_LOADING,\r\n  moviesErrorAC,MOVIES_ERROR,\r\n  moviesSetAC,MOVIES_SET,\r\n}","const FAVORITES_LOADING='FAVORITES_LOADING';\r\nconst FAVORITES_ERROR='FAVORITES_ERROR';\r\nconst FAVORITES_SET='FAVORITES_SET';\r\nconst FAVORITES_DELETE ='FAVORITES_DELETE';\r\n\r\nconst favoritesLoadingAC=function() {\r\n  return {\r\n    type: FAVORITES_LOADING,\r\n  };\r\n}\r\n\r\nconst favoritesErrorAC=function() {\r\n  return {\r\n    type: FAVORITES_ERROR,\r\n  };\r\n}\r\n\r\nconst favoritesSetAC=function(favorites) {\r\n  return {\r\n    type: FAVORITES_SET,\r\n    favorites:favorites,\r\n  };\r\n}\r\n\r\nconst favoriteDeleteAC=function(deleteIndex) {\r\n  return {\r\n    type:FAVORITES_DELETE,\r\n    deleteIndex:deleteIndex\r\n  };\r\n}\r\n\r\nexport {\r\n  favoritesLoadingAC,FAVORITES_LOADING,\r\n  favoritesErrorAC,FAVORITES_ERROR,\r\n  favoritesSetAC,FAVORITES_SET,\r\n  favoriteDeleteAC,FAVORITES_DELETE\r\n}","import {FEATURED_API} from '../AppData'\r\nimport { moviesLoadingAC, moviesErrorAC, moviesSetAC } from \"./moviesListAC\";\r\nimport {favoritesLoadingAC, favoritesErrorAC, favoritesSetAC} from \"./favoriteListAC\";\r\n\r\nfunction moviesThunkAC(dispatch) {\r\n    // Как и любой action creator, moviesThunkAC должен вернуть action,\r\n    // только action будет не хэш, а ФУНКЦИЯ.\r\n    // Все middleware стоят ДО редьюсеров, их задача - преобразовывать или фильтровать action-ы.\r\n    // Конкретно middleware \"thunk\", если обнаруживает что action - функция а не хэш, \r\n    // ВЫПОЛНЯЕТ эту функцию и не пропускает её дальше, к редьюсерам.\r\n    return function() {\r\n        dispatch( moviesLoadingAC() );\r\n        let apiArray = [];\r\n        for(let i=1; i<500; i++) {\r\n          apiArray.push(fetch(FEATURED_API +i)\r\n              .then(res => {\r\n                if(!res.ok)\r\n                  throw new Error(\"fetch error \" + res.status);\r\n                else \r\n                  return res.json()\r\n                })\r\n            .then(res => res.results))\r\n            }\r\n            Promise.all(apiArray)\r\n              .then(res =>{\r\n                for(let i=1; i<res.length; i++) {\r\n                  res[0] = res[0].concat(res[i]);\r\n                  if(i === res.length-1 ) return res[0]\r\n                }\r\n              })\r\n              .then(data => {\r\n                dispatch( moviesSetAC(data));\r\n                console.log(data)\r\n              })\r\n              .catch (error => {\r\n                console.error(error);\r\n                dispatch(moviesErrorAC());\r\n              })\r\n            \r\n    }\r\n}\r\n\r\nfunction favoritesThunkAC(dispatch, id) {\r\n\r\n  return function() {\r\n      dispatch( favoritesLoadingAC() );\r\n        fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=953aabad8f5d4a2f206f8f80281ffd31&language=ru-RU`)\r\n            .then(res => {\r\n              if(!res.ok)\r\n                throw new Error(\"fetch error \" + res.status);\r\n              else \r\n                return res.json()\r\n            })\r\n            .then(data => {\r\n              dispatch( favoritesSetAC(data));\r\n            })\r\n            .catch (error => {\r\n              console.error(error);\r\n              dispatch(favoritesErrorAC());\r\n            })\r\n          \r\n  }\r\n\r\n}\r\n\r\nexport {moviesThunkAC, favoritesThunkAC};","const FEATURED_API = \"https://api.themoviedb.org/3/discover/movie?primary_release_year=2021&sort_by=popularity.desc&api_key=953aabad8f5d4a2f206f8f80281ffd31&language=ru-RU&page=\";\r\n\r\nexport {\r\n    FEATURED_API\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nimport './Movie.css'\r\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\"\r\n\r\nclass Movie extends React.PureComponent {\r\n\r\n\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n        poster_path: PropTypes.string,\r\n        overview: PropTypes.string.isRequired,\r\n        vote_average: PropTypes.number.isRequired,\r\n        id: PropTypes.number.isRequired,\r\n    }\r\n\r\n    setVoteClass = (vote) => {\r\n        if(vote >= 7.5) {\r\n            return 'green';\r\n        } else if(vote >= 6) {\r\n            return 'orange';\r\n        } else {\r\n            return 'red';\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"movie\">           \r\n                  <img src=\r\n                  {this.props.poster_path ? \r\n                  (IMG_API + this.props.poster_path) :\r\n                  \"https://images.unsplash.com/photo-1542204637-e67bc7d41e48?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=675&q=80\"\r\n                  } alt={this.props.title}/>\r\n                  <div className=\"movie-info\">\r\n                      <h3>{this.props.title}</h3>\r\n                      <span className={\r\n                          `tag ${this.setVoteClass(this.props.vote_average)}`\r\n                    }>\r\n                          {this.props.vote_average}</span>\r\n                  </div>\r\n\r\n                  <div className=\"movie-over\">\r\n                      <h2>Описание:</h2>\r\n                      <p>{this.props.overview}</p>\r\n                      <NavLink to={\"/FD3-Tylets/movie/\"+this.props.id} className=\"movie-info-link\"> Подробнее...</NavLink>\r\n\r\n\r\n\r\n                  </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Movie;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Header.css'\r\n\r\nclass Header extends React.PureComponent {\r\n\r\n  \r\n  static propTypes = {\r\n    favorites: PropTypes.object.isRequired,\r\n}\r\n\r\n    render() {\r\n        return(\r\n            <header>\r\n              <div className='logo'>\r\n                <NavLink to={\"/FD3-Tylets\"} className=\"main-page-link\" title=\"Go Home\"><svg></svg></NavLink>\r\n                <h2>MoviesDB</h2>\r\n              </div>\r\n              <NavLink to={\"/FD3-Tylets/favlist\"} className={(this.props.favorites.data.length >0)? 'favorite-list-link-active' : 'favorite-list-link'}>Избранное({this.props.favorites.data.length})</NavLink>\r\n            </header>\r\n\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = function (state) {\r\n  return {\r\n    favorites: state.favorites,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './Pagination.css'\r\n\r\n\r\nclass Pagination extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        currPage: PropTypes.number,\r\n        movies: PropTypes.object.isRequired\r\n    }\r\n\r\n    state = {\r\n        pages:[]\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.currPage !== prevProps.currPage){\r\n        return this.creator()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.creator();\r\n    }\r\n\r\n    creator = () => {\r\n        const pages = [];\r\n        const pagesCount = Math.ceil((this.props.movies.data.length)/60);\r\n        const currPage = this.props.currPage ? this.props.currPage : 1;\r\n        if(pagesCount > 5) {\r\n            if(currPage > 3) {\r\n                for (let i = currPage-2; i <= currPage+2; i++) {\r\n                    pages.push(i)\r\n                    if(i === pagesCount) break\r\n                }\r\n            }\r\n            else {\r\n                for (let i = 1; i <= 5; i++) {\r\n                    pages.push(i)\r\n                    if(i === pagesCount) break\r\n                }\r\n            }\r\n        }  else {\r\n            for (let i = 1; i <= pagesCount; i++) {\r\n                pages.push(i)\r\n            }\r\n        }\r\n        this.setState({pages:pages})\r\n}\r\n\r\n    render() {\r\n        return(\r\n            <div className='pages'>\r\n                {this.state.pages.map((page, index)=> \r\n                <NavLink to={`/FD3-Tylets/pages/${page}`}><span key={index} className={this.props.currPage===page ? 'current-page' : 'page'}>{page}</span></NavLink>\r\n                )}\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n    return {\r\n      movies: state.movies,\r\n    };\r\n  };\r\n  \r\n  export default connect(mapStateToProps)(Pagination);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\nimport { moviesThunkAC } from \"./redux/fetchThunk\";\n\nimport './App.css';\n\nimport Movie from './components/Movie';\nimport Header from './components/Header';\nimport Pagination from './components/Pagination';\n\n\nclass App extends React.PureComponent {\n\n  state = {\n    update: false,\n    perPage: 24\n  }\n\n  static propTypes = {\n    page: PropTypes.number,\n    movies: PropTypes.object.isRequired,\n  }\n\n  componentDidMount() {\n    this.props.dispatch( moviesThunkAC(this.props.dispatch) );\n  }\n\n\n  render() {\n    let moviesList =\n      this.props.movies.data ?\n      (this.props.page?\n          (this.props.movies.data.slice(((this.props.page*this.state.perPage + 1*this.props.page)-this.state.perPage), (this.props.page*this.state.perPage + 1*this.props.page)).map((movie) =>\n          <Movie \n            key={movie.id} \n            title={movie.title}\n            poster_path={movie.poster_path}\n            overview={movie.overview}\n            vote_average={movie.vote_average}\n            id={movie.id}\n          />\n        )) :\n        (this.props.movies.data.slice(0, this.state.perPage).map((movie) =>\n        <Movie \n          key={movie.id} \n          title={movie.title}\n          poster_path={movie.poster_path}\n          overview={movie.overview}\n          vote_average={movie.vote_average}\n          id={movie.id}\n        />\n      ))):\n        <div></div>\n\n    if ( this.props.movies.status==='loading' )\n    return \"загрузка...\";\n\n  if ( this.props.movies.status==='error' )\n    return \"ошибка загрузки данных\";\n\n      return (\n        <div>\n          <Header/>\n        <div className=\"App\">\n          {moviesList}\n        </div>\n        <Pagination currPage={this.props.page}/>\n        </div>\n    );\n  }\n}\nconst mapStateToProps = function (state) {\n  return {\n    movies: state.movies,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n\n\n","import React from 'react';\r\nimport App from '../App';\r\n\r\n\r\n\r\nclass Page_MoviesList extends React.PureComponent {\r\n\r\n    render() {\r\n        return (\r\n\r\n            <App/>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Page_MoviesList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nimport './Cast.css'\r\n\r\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\" \r\n\r\nclass Cast extends React.Component {\r\n\r\n    static propTypes = {\r\n        movieId: PropTypes.number.isRequired,\r\n    }\r\n\r\n    state = {\r\n        credits: [],\r\n        dataReady: false\r\n    }\r\n\r\n    fetchSuccess = (movieCredits) => {\r\n        this.setState({\r\n          dataReady:true,\r\n          credits: movieCredits\r\n        })\r\n      }\r\n\r\n    fetchError = (errorMessage) => {\r\n        console.error(errorMessage);\r\n      };\r\n\r\n    componentDidMount() {\r\n      this.loadData();\r\n    }\r\n\r\n    loadData = () => {\r\n      fetch(`https://api.themoviedb.org/3/movie/${this.props.movieId}/credits?api_key=953aabad8f5d4a2f206f8f80281ffd31&language=ru-RU`)\r\n      .then(res => {\r\n        if(!res.ok)\r\n          throw new Error(\"fetch error \" + res.status);\r\n        else \r\n          return res.json()\r\n      })\r\n      .then(data => {\r\n        this.fetchSuccess(data.cast.slice(0,7))\r\n      })\r\n      .catch (error => {\r\n        this.fetchError(error.massage);\r\n      })\r\n    }\r\n\r\n\r\n    render() { \r\n      let actor = this.state.credits.map(i => \r\n        <div className='actor' key = {i.cast_id}>\r\n          <img src={IMG_API+i.profile_path} alt={i.original_name}/>\r\n          <p>{i.original_name}</p>  \r\n          <p>{i.character}</p>\r\n        </div>);\r\n\r\n      if ( !this.state.dataReady )\r\n        return <div>загрузка данных...</div>;\r\n\r\n        return (\r\n          <div className='container'>\r\n            <div className='cast'>\r\n            <h2>Main cast</h2>\r\n            <div className='cast-slider'>\r\n              {actor}\r\n            </div>\r\n          </div>\r\n          </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cast;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nvar DoughnutChart = require(\"react-chartjs\").Doughnut;\r\n\r\nclass MyChart extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        vote: PropTypes.number.isRequired,\r\n    }\r\n\r\n  render() {\r\n      let color = this.props.vote>=7.5 ? 'green': (this.props.vote>=6 ? 'orange' : 'red')\r\n\r\n      var chartData =[\r\n        {\r\n            value: (this.props.vote)*10,\r\n            color:color,\r\n        },\r\n        {\r\n            value: 100-(this.props.vote)*10,\r\n            color:\"black\",\r\n        },\r\n      ]\r\n\r\n      var chartOptions = {\r\n        showTooltips: false,\r\n        //Boolean - Whether we should show a stroke on each segment\r\n        segmentShowStroke : false,\r\n    \r\n        //String - The colour of each segment stroke\r\n        segmentStrokeColor : \"#fff\",\r\n    \r\n        //Number - The width of each segment stroke\r\n        segmentStrokeWidth : 2,\r\n    \r\n        //Number - The percentage of the chart that we cut out of the middle\r\n        percentageInnerCutout : 70, // This is 0 for Pie charts\r\n    \r\n        //Number - Amount of animation steps\r\n        animationSteps : 100,\r\n    \r\n        //String - Animation easing effect\r\n        animationEasing : \"easeOutBounce\",\r\n    \r\n        //Boolean - Whether we animate the rotation of the Doughnut\r\n        animateRotate : true,\r\n    \r\n        //Boolean - Whether we animate scaling the Doughnut from the centre\r\n        animateScale : false,\r\n        // {% raw %}\r\n        //String - A legend template\r\n        legendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<segments.length; i++){%><li><span style=\\\"background-color:<%=segments[i].fillColor%>\\\"><%if(segments[i].label){%><%=segments[i].label%><%}%></span></li><%}%></ul>\"\r\n        // {% endraw %}\r\n    }\r\n\r\n      return(\r\n        <DoughnutChart data={chartData} options={chartOptions} width='70px' height='70px'/>\r\n      );\r\n  }\r\n}\r\n\r\nexport default MyChart;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\n\r\nimport { favoritesThunkAC } from '../redux/fetchThunk';\r\nimport { favoriteDeleteAC } from '../redux/favoriteListAC';\r\n\r\nimport './Favorite.css';\r\n\r\nclass Favorite extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        movieId: PropTypes.number.isRequired,\r\n        favorites: PropTypes.object.isRequired,\r\n    }\r\n    state = {\r\n        added: false\r\n    }\r\n\r\ncomponentDidMount(){\r\n    if (this.props.favorites.data.findIndex(i => i.id === this.props.movieId) === -1){\r\n        this.setState({added:false})\r\n    } else this.setState({added:true})\r\n}\r\n\r\n    addToFavoriteList = () => {\r\n        this.props.dispatch(favoritesThunkAC(this.props.dispatch, this.props.movieId) );\r\n        console.log(this.props.favorites.data.findIndex(i=>i.id===this.props.movieId))\r\n\r\n        this.setState({added:true})\r\n    } \r\n    delete = () => {\r\n        let deleteIndex = this.props.favorites.data.findIndex(i=>i.id===this.props.movieId)\r\n        this.props.dispatch(favoriteDeleteAC(deleteIndex) );\r\n        console.log(deleteIndex)\r\n        this.setState({added:false})\r\n    } \r\n\r\n  render() {\r\n      return ( <div className='buttons'>\r\n            {!this.state.added?\r\n            <div className='button heart' onClick={this.addToFavoriteList} title='Добавить в Избранное'></div> :\r\n            <div className='button cross'  onClick={this.delete} title='Удалить из Избранного'></div>\r\n            }\r\n            </div>\r\n\r\n      );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n    return {\r\n      favorites: state.favorites,\r\n    };\r\n  };\r\n  \r\n  export default connect(mapStateToProps)(Favorite);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nimport './Recomended.css'\r\n\r\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\" \r\n\r\nclass Recomended extends React.Component {\r\n\r\n    static propTypes = {\r\n        movieId: PropTypes.number.isRequired,\r\n    }\r\n\r\n    state = {\r\n        recMovies: [],\r\n        dataReady: false\r\n    }\r\n\r\n    fetchSuccess = (recMovies) => {\r\n        this.setState({\r\n          dataReady: true,\r\n          recMovies: recMovies\r\n        })\r\n      }\r\n\r\n    fetchError = (errorMessage) => {\r\n        console.error(errorMessage);\r\n      };\r\n\r\n    componentDidMount() {\r\n      this.loadData();\r\n    }\r\n\r\n    loadData = () => {\r\n      fetch(`https://api.themoviedb.org/3/movie/${this.props.movieId}/recommendations?api_key=953aabad8f5d4a2f206f8f80281ffd31&language=ru-RU`)\r\n      .then(res => {\r\n        if(!res.ok)\r\n          throw new Error(\"fetch error \" + res.status);\r\n        else \r\n          return res.json()\r\n      })\r\n      .then(data => {\r\n        this.fetchSuccess(data.results.slice(0,4))\r\n      })\r\n      .catch (error => {\r\n        this.fetchError(error.massage);\r\n      })\r\n    }\r\n\r\n\r\n    render() { \r\n      let recMovie = this.state.recMovies.map(i => \r\n        <div className='rec-movie' key = {i.id}>\r\n          <NavLink exact to={\"/FD3-Tylets/movie/\"+i.id}> <img src={IMG_API+i.backdrop_path} alt={i.title}/></NavLink>\r\n          <div className='text-line'>\r\n          <p>{i.title}</p>  \r\n          <p>{Math.floor(i.vote_average*10)}%</p>\r\n          </div>\r\n        </div>);\r\n\r\n      if ( !this.state.dataReady )\r\n        return <div>загрузка данных...</div>;\r\n\r\n\r\n        return (\r\n          <div className='container'>\r\n            <div className='Recommendations'>\r\n            <h2>Recommendations</h2>\r\n            <div className='rec-slider'>\r\n              {recMovie}\r\n            </div>\r\n          </div>\r\n          </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Recomended;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Header from './Header';\r\nimport Cast from './Cast';\r\nimport MyChart from './Chart';\r\nimport Favorite from './Favorite';\r\n\r\n\r\nimport './MovieInfo.css';\r\nimport Recomended from './Recomended';\r\n\r\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\"\r\n\r\nclass MovieInfo extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        movieId: PropTypes.number.isRequired,\r\n      }\r\n\r\n    state = {\r\n        info: [],\r\n        dataReady: false,\r\n        added: false\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n      if (this.props.movieId !== prevProps.movieId) {\r\n        this.loadData();\r\n        this.setState ({dataReady:false})\r\n      }\r\n    }\r\n    \r\n\r\n\r\n    fetchSuccess = (movieInfo) => {\r\n        this.setState({\r\n          dataReady:true,\r\n          info: movieInfo\r\n        })\r\n      }\r\n\r\n    fetchError = (errorMessage) => {\r\n        console.error(errorMessage);\r\n      };\r\n\r\n    componentDidMount() {\r\n      this.loadData();\r\n      console.log(this.props.movieId)\r\n    }\r\n\r\n    loadData = () => {\r\n      fetch(`https://api.themoviedb.org/3/movie/${this.props.movieId}?api_key=953aabad8f5d4a2f206f8f80281ffd31&language=ru-RU`)\r\n      .then(res => {\r\n        if(!res.ok)\r\n          throw new Error(\"fetch error \" + res.status);\r\n        else \r\n          return res.json()\r\n      })\r\n      .then(data => {\r\n        this.fetchSuccess(data)\r\n      })\r\n      .catch (error => {\r\n        this.fetchError(error.massage);\r\n      })\r\n    }\r\n    \r\n\r\n\r\n    render() {\r\n        \r\n        let rating = this.state.info.vote_average*10;\r\n\r\n\r\n        if ( !this.state.dataReady )\r\n        return <div>загрузка данных...</div>;\r\n  \r\n        return(\r\n            <div className='movie_info'>\r\n                <Header/>\r\n                <div className=\"movie-main-info\" style={{\r\n                  background:`radial-gradient( rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 1) ), \r\n                  no-repeat center/cover url(\r\n                    ${this.state.info.backdrop_path? \r\n                    IMG_API+this.state.info.backdrop_path:\r\n                    \"https://images.unsplash.com/photo-1542204637-e67bc7d41e48?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=675&q=80\"\r\n                    }`}}>\r\n                    \r\n                  <img src=\r\n                  {this.state.info.poster_path ? \r\n                  (IMG_API + this.state.info.poster_path) :\r\n                  \"https://images.unsplash.com/photo-1542204637-e67bc7d41e48?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=675&q=80\"\r\n                  } className=\"poster-image\" alt={this.state.info.title}/>\r\n                  <div className=\"text-info\">\r\n                  <h1>\r\n                    {this.state.info.title} {this.state.info.release_date ? `(${this.state.info.release_date.slice(0,4)})` : ''}\r\n                  </h1>\r\n                  <p className=\"original-title\">{this.state.info.original_title}</p>\r\n                  <p style={{fontStyle:\"italic\", margin:0}}>{this.state.info.runtime} min</p>\r\n                  <p className=\"genre\">\r\n                    {this.state.info.genres?\r\n                    (this.state.info.genres.map(i => i.name)).join(', '):\r\n                    ''} \r\n                  </p>\r\n                  <div className='bttn-rating'>\r\n                  <div className='rating'>\r\n                        <div className='percent'>{rating}%</div>\r\n                        <MyChart className='circle' vote={this.state.info.vote_average}/>\r\n                    </div>\r\n                      <Favorite movieId = {this.props.movieId}/>\r\n                    </div>\r\n                  <p style={{ fontStyle:\"italic\", fontFamily:'Helvetica Neue', fontSize:\"23px\", opacity:\"0.6\"}}>{this.state.info.tagline}</p>\r\n\r\n                  <div>\r\n                    <h2>Описание</h2>\r\n                    {this.state.info.overview}\r\n                  </div>\r\n                  </div>\r\n                </div>\r\n                <Cast movieId = {this.props.movieId}/>\r\n                <Recomended movieId = {this.props.movieId}/>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default MovieInfo;","import React from 'react';\r\n\r\nimport MovieInfo from '../components/MovieInfo';\r\n\r\nclass Page_MovieInfo extends React.PureComponent {\r\n\r\n    render() {\r\n        let movieId=parseInt(this.props.match.params.mid);\r\n        console.log(movieId);\r\n\r\n        return(\r\n            <MovieInfo\r\n              movieId ={movieId}\r\n            />\r\n       );\r\n    }\r\n}\r\n\r\nexport default Page_MovieInfo;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport Header from './Header';\r\nimport Favorite from \"./Favorite\";\r\n\r\nimport './FavoriteList.css'\r\n\r\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\" \r\n\r\nclass FavoriteList extends React.PureComponent {\r\n\r\n\r\n    static propTypes = {\r\n        favorites: PropTypes.array.isRequired,\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props.favorites)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let list =\r\n        this.props.favorites.map(item => {\r\n        return (\r\n            <li className='list-item' key={item.id}>\r\n            <NavLink to={\"/FD3-Tylets/movie/\"+item.id}> \r\n            <img className='list-img' src={IMG_API+item.poster_path} alt={item.title}/>\r\n            </NavLink>\r\n            <p className='title'>{item.title}</p>\r\n            <p className='vote'>{item.vote_average}</p>\r\n            <Favorite className=\"btn\" movieId = {item.id} />\r\n          </li>\r\n        )\r\n        })\r\n        return (\r\n            <div className='list-container'>\r\n                <Header></Header>\r\n                <ul className=\"list\">\r\n                    {list}\r\n                </ul>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = function (state) {\r\n    return {\r\n      favorites: state.favorites.data,\r\n    };\r\n  };\r\n  \r\n  export default connect(mapStateToProps)(FavoriteList);","import React from 'react';\r\nimport FavoriteList from '../components/FavoriteList';\r\n\r\n\r\n\r\nclass Page_FavoriteList extends React.PureComponent {\r\n\r\n    render() {\r\n        return (\r\n            <FavoriteList/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Page_FavoriteList;","import React from 'react';\r\nimport App from '../App';\r\n\r\n\r\n\r\nclass Page_MoviesList_pages extends React.PureComponent {\r\n\r\n    render() {\r\n        let page=parseInt(this.props.match.params.page);\r\n        return (\r\n\r\n            <App page={page}/>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Page_MoviesList_pages;","import { MOVIES_LOADING, MOVIES_ERROR, MOVIES_SET } from './moviesListAC';\r\n\r\nconst initState={\r\n\r\n  status: 0, // 0 - ничего не началось, 1 - идёт загрузка, 2 - была ошибка, 3 - данные загружены\r\n  data: null,\r\n\r\n}\r\n\r\nfunction moviesListReducer(state=initState,action) {\r\n  switch (action.type) {\r\n\r\n    case MOVIES_LOADING: {\r\n      let newState={\r\n        status:'loading',\r\n        data:null,\r\n      };\r\n      return newState;\r\n    }\r\n\r\n    case MOVIES_ERROR: {\r\n      let newState={\r\n        status:'error',\r\n        data:null,\r\n      };\r\n      return newState;\r\n    }\r\n\r\n    case MOVIES_SET: {\r\n      let newState={\r\n        status:'ok',\r\n        data:action.movies,\r\n      };\r\n      return newState;\r\n    }\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default moviesListReducer;","import { FAVORITES_LOADING, FAVORITES_ERROR, FAVORITES_SET, FAVORITES_DELETE} from './favoriteListAC';\r\n\r\nconst initState={\r\n\r\n  status: 0, // 0 - ничего не началось, 1 - идёт загрузка, 2 - была ошибка, 3 - данные загружены\r\n  data: [],\r\n\r\n}\r\n\r\nfunction favoriteListReducer(state=initState,action) {\r\n  switch (action.type) {\r\n\r\n    case FAVORITES_LOADING: {\r\n        let newState={...state};\r\n        newState.status='loading';\r\n        // newState.data=[...newState.data,null];\r\n      return newState;\r\n    }\r\n\r\n    case FAVORITES_ERROR: {\r\n      let newState={...state};\r\n      newState.status='error';\r\n    //   newState.data=[...newState.data,null];\r\n      return newState;\r\n    }\r\n\r\n    case FAVORITES_SET: {\r\n      console.log('state до обработки редьюсером:', state)\r\n      let newState={...state};\r\n        newState.status='ok';\r\n        newState.data=[...newState.data,action.favorites];\r\n        console.log('state после обработки редьюсером:', newState)\r\n      return newState;\r\n    }\r\n\r\n    case FAVORITES_DELETE: {\r\n      let newState={...state};\r\n        newState.status='ok';\r\n        newState.data=newState.data.slice()\r\n        newState.data.splice(action.deleteIndex,1);\r\n        console.log('state после обработки редьюсером:', newState);\r\n\r\n\r\n      return newState;\r\n    }\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default favoriteListReducer;","import { combineReducers } from 'redux';\r\n\r\nimport moviesListReducer from \"./moviesListReducer\";\r\n\r\nimport favoriteListReducer from './favoriteListReducer'\r\n\r\nlet combinedReducer=combineReducers({\r\n    movies: moviesListReducer,\r\n    favorites: favoriteListReducer,\r\n    \r\n});\r\n\r\nexport default combinedReducer;","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Page_MoviesList from './Page_MoviesList';\r\nimport Page_MovieInfo from './Page_MovieInfo';\r\nimport Page_FavoriteList from './Page_FavoriteList';\r\nimport Page_MoviesList_pages from './Page_MovieList_pages';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nimport combinedReducer from '../redux/reducers';\r\n\r\nconst persistedState = localStorage.getItem('reduxState') \r\n                       ? JSON.parse(localStorage.getItem('reduxState'))\r\n                       : {}\r\n\r\nlet store=createStore(combinedReducer, persistedState, applyMiddleware(thunk));\r\n\r\nstore.subscribe(()=>{\r\n  localStorage.setItem('reduxState', JSON.stringify(store.getState()))\r\n})\r\n\r\nclass PagesRouter extends React.Component {\r\n          \r\n    render() {\r\n  \r\n      return (\r\n        <Provider store={store}>\r\n        <div>\r\n          <Route path=\"/FD3-Tylets\" exact component={Page_MoviesList} />\r\n          <Route path=\"/FD3-Tylets/pages/:page\" exact component={Page_MoviesList_pages} />\r\n          <Route path=\"/FD3-Tylets/movie/:mid\" exact component={Page_MovieInfo} />\r\n          <Route path=\"/FD3-Tylets/favlist\" exact component={Page_FavoriteList} />\r\n        </div>\r\n        </Provider>\r\n      );\r\n      \r\n    }\r\n  \r\n  }\r\n      \r\n  export default PagesRouter;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ScrollToTop from './components/ScrollToTop';\nimport PagesRouter from './pages/PagesRouter.';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <BrowserRouter>\n      <ScrollToTop />\n      <PagesRouter/>\n    </BrowserRouter>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}